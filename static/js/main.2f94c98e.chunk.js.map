{"version":3,"sources":["vibe-gifs/bamboozled.gif","vibe-gifs/bean-field.gif","vibe-gifs/bulldog-motorcycle.gif","vibe-gifs/bulldog-sleepy.gif","vibe-gifs/bulldog-snacking.gif","vibe-gifs/bulldog-stretch.gif","vibe-gifs/bulldog-swing.gif","vibe-gifs/bulldog-trampoline.gif","vibe-gifs/bulldog-treadmill.gif","vibe-gifs/bunny-sleep.gif","vibe-gifs/cookie-monster-wait.gif","vibe-gifs/costanza-serenity.gif","vibe-gifs/daffy-nervous.gif","vibe-gifs/dog-hammock.gif","vibe-gifs/dog-homework.gif","vibe-gifs/dog-out-of-bed.gif","vibe-gifs/dog-pjs.gif","vibe-gifs/dog-reading.gif","vibe-gifs/dog-shock-ground.gif","vibe-gifs/dog-treadmill.gif","vibe-gifs/dog-typing.gif","vibe-gifs/drink-science.gif","vibe-gifs/eeyore-bored.gif","vibe-gifs/eeyore-thankful.gif","vibe-gifs/fire-typing.gif","vibe-gifs/gump-dumb.gif","vibe-gifs/homer-electricution.gif","vibe-gifs/homer-monkey.gif","vibe-gifs/homer-scream.gif","vibe-gifs/homer-work-money.gif","vibe-gifs/homer-work.gif","vibe-gifs/husky-eat-floor.gif","vibe-gifs/kermit-frantic.gif","vibe-gifs/kermit-nervous.gif","vibe-gifs/kermit-type.gif","vibe-gifs/korgi-tv.gif","vibe-gifs/korgi-typing.gif","vibe-gifs/kramer-chicken.gif","vibe-gifs/kramer-shock.gif","vibe-gifs/kramer-too-much.gif","vibe-gifs/lazy-dog-pool.gif","vibe-gifs/lazy-raccoon.gif","vibe-gifs/michael-scott-cringe.gif","vibe-gifs/office-space-apathy.gif","vibe-gifs/office-space-bobs.gif","vibe-gifs/patrick-nothing.gif","vibe-gifs/penguin-work.gif","vibe-gifs/pooh-sleep.gif","vibe-gifs/pooh-thinking.gif","vibe-gifs/pug-shock.gif","vibe-gifs/push-fetch.gif","vibe-gifs/shiba-inu-working.gif","vibe-gifs/shocked-dog.gif","vibe-gifs/sloth-carrots.gif","vibe-gifs/spongebob-cleaning.gif","vibe-gifs/spongebob-coffee.gif","vibe-gifs/spongebob-reading.gif","vibe-gifs/sylvester-coffee.gif","vibe-gifs/three-laptops.gif","vibe-gifs/upright-dog-shock.gif","vibe-gifs/weiner-dog.gif","Stress.js","Vibe.js","Countdown.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Stress","props","class","this","stress","React","Component","Vibe","GumpDumb","noStressGifs","BeanField","BulldogSleepy","BulldogSnacking","BulldogStretch","BulldogSwing","BulldogTrampoline","BunnySleep","CookieMonsterWait","DogHammock","DogOutOfBed","DogPjs","HuskyEatFloor","KorgiTv","KramerChicken","LazyDogPool","LazyRaccoon","OfficeSpaceBobs","PatrickNothing","PoohSleep","PushFetch","SlothCarrots","SpongebobCoffee","Math","floor","random","length","lowStressGifs","BulldogMotorcycle","DaffyNervous","DogHomework","DogReading","DogTreadmill","DogTyping","DrinkScience","EeyoreBored","EeyoreThankful","HomerElectricution","HomerMonkey","HomerWork","OfficeSpaceApathy","PenguinWork","PoohThinking","ShibaInuWorking","SpongebobReading","WeinerDog","midStressGifs","BulldogTreadmill","CostanzaSerenity","DogShockGround","HomerWorkMoney","KermitNervous","KermitType","KorgiTyping","MichaelScottCringe","PugShock","ShockedDog","UprightDogShock","highStressGifs","Bamboozled","FireTyping","HomerScream","KermitFrantic","KramerShock","KramerTooMuch","SpongebobCleaning","SylvesterCoffee","ThreeLaptops","src","getVibe","alt","Countdown","date","displayTime","Date","toLocaleDateString","title","available","shift","time","toLocaleTimeString","substring","getUntil","require","config","App","state","color","updateState","bind","setInterval","clearInterval","fetchStress","then","fetchAvailability","availability","setState","getColor","cell","call","fetch","res","json","values","timeMax","now","toISOString","timeMin","calID","process","requestOptions","method","headers","body","JSON","stringify","items","id","nextEvent","calendars","busy","start","end","message","elaboration","document","style","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"8HAAAA,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,gD,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,iD,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,8C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.2f94c98e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bamboozled.5354633c.gif\";","module.exports = __webpack_public_path__ + \"static/media/bean-field.bfe50feb.gif\";","module.exports = __webpack_public_path__ + \"static/media/bulldog-motorcycle.ec2f1471.gif\";","module.exports = __webpack_public_path__ + \"static/media/bulldog-sleepy.39c6df20.gif\";","module.exports = __webpack_public_path__ + \"static/media/bulldog-snacking.d6ad1b6d.gif\";","module.exports = __webpack_public_path__ + \"static/media/bulldog-stretch.e36a4749.gif\";","module.exports = __webpack_public_path__ + \"static/media/bulldog-swing.20ff459a.gif\";","module.exports = __webpack_public_path__ + \"static/media/bulldog-trampoline.7043e0e1.gif\";","module.exports = __webpack_public_path__ + \"static/media/bulldog-treadmill.13241e21.gif\";","module.exports = __webpack_public_path__ + \"static/media/bunny-sleep.b57ed286.gif\";","module.exports = __webpack_public_path__ + \"static/media/cookie-monster-wait.509b3f04.gif\";","module.exports = __webpack_public_path__ + \"static/media/costanza-serenity.e39ea530.gif\";","module.exports = __webpack_public_path__ + \"static/media/daffy-nervous.47cc5144.gif\";","module.exports = __webpack_public_path__ + \"static/media/dog-hammock.c38a7c8a.gif\";","module.exports = __webpack_public_path__ + \"static/media/dog-homework.0b0cbcc1.gif\";","module.exports = __webpack_public_path__ + \"static/media/dog-out-of-bed.bef159eb.gif\";","module.exports = __webpack_public_path__ + \"static/media/dog-pjs.91d57fb4.gif\";","module.exports = __webpack_public_path__ + \"static/media/dog-reading.0636516b.gif\";","module.exports = __webpack_public_path__ + \"static/media/dog-shock-ground.7c075be3.gif\";","module.exports = __webpack_public_path__ + \"static/media/dog-treadmill.41f12784.gif\";","module.exports = __webpack_public_path__ + \"static/media/dog-typing.99fd05a3.gif\";","module.exports = __webpack_public_path__ + \"static/media/drink-science.8ceb6b2e.gif\";","module.exports = __webpack_public_path__ + \"static/media/eeyore-bored.7ed9af9d.gif\";","module.exports = __webpack_public_path__ + \"static/media/eeyore-thankful.bfb5e6d1.gif\";","module.exports = __webpack_public_path__ + \"static/media/fire-typing.5c8cb6b5.gif\";","module.exports = __webpack_public_path__ + \"static/media/gump-dumb.fd9a7bbd.gif\";","module.exports = __webpack_public_path__ + \"static/media/homer-electricution.8c98b5d7.gif\";","module.exports = __webpack_public_path__ + \"static/media/homer-monkey.3fc54d03.gif\";","module.exports = __webpack_public_path__ + \"static/media/homer-scream.eeb57a09.gif\";","module.exports = __webpack_public_path__ + \"static/media/homer-work-money.43775fd9.gif\";","module.exports = __webpack_public_path__ + \"static/media/homer-work.d75a43ff.gif\";","module.exports = __webpack_public_path__ + \"static/media/husky-eat-floor.6f98666b.gif\";","module.exports = __webpack_public_path__ + \"static/media/kermit-frantic.2a11ff4f.gif\";","module.exports = __webpack_public_path__ + \"static/media/kermit-nervous.80d63429.gif\";","module.exports = __webpack_public_path__ + \"static/media/kermit-type.42a805aa.gif\";","module.exports = __webpack_public_path__ + \"static/media/korgi-tv.56d8390b.gif\";","module.exports = __webpack_public_path__ + \"static/media/korgi-typing.ba0c427d.gif\";","module.exports = __webpack_public_path__ + \"static/media/kramer-chicken.2aedce93.gif\";","module.exports = __webpack_public_path__ + \"static/media/kramer-shock.0bae7f6b.gif\";","module.exports = __webpack_public_path__ + \"static/media/kramer-too-much.79e61f2d.gif\";","module.exports = __webpack_public_path__ + \"static/media/lazy-dog-pool.1348d1e2.gif\";","module.exports = __webpack_public_path__ + \"static/media/lazy-raccoon.abfd2e3b.gif\";","module.exports = __webpack_public_path__ + \"static/media/michael-scott-cringe.c41969b8.gif\";","module.exports = __webpack_public_path__ + \"static/media/office-space-apathy.52443cfc.gif\";","module.exports = __webpack_public_path__ + \"static/media/office-space-bobs.eba75463.gif\";","module.exports = __webpack_public_path__ + \"static/media/patrick-nothing.0262d7b1.gif\";","module.exports = __webpack_public_path__ + \"static/media/penguin-work.84370d11.gif\";","module.exports = __webpack_public_path__ + \"static/media/pooh-sleep.44fc86e4.gif\";","module.exports = __webpack_public_path__ + \"static/media/pooh-thinking.236a3f5b.gif\";","module.exports = __webpack_public_path__ + \"static/media/pug-shock.c078a704.gif\";","module.exports = __webpack_public_path__ + \"static/media/push-fetch.34280ee9.gif\";","module.exports = __webpack_public_path__ + \"static/media/shiba-inu-working.c132adfe.gif\";","module.exports = __webpack_public_path__ + \"static/media/shocked-dog.e320a193.gif\";","module.exports = __webpack_public_path__ + \"static/media/sloth-carrots.79f0397b.gif\";","module.exports = __webpack_public_path__ + \"static/media/spongebob-cleaning.67eb94b8.gif\";","module.exports = __webpack_public_path__ + \"static/media/spongebob-coffee.64736431.gif\";","module.exports = __webpack_public_path__ + \"static/media/spongebob-reading.a4811dcf.gif\";","module.exports = __webpack_public_path__ + \"static/media/sylvester-coffee.bb471cf3.gif\";","module.exports = __webpack_public_path__ + \"static/media/three-laptops.c2640703.gif\";","module.exports = __webpack_public_path__ + \"static/media/upright-dog-shock.88a3725f.gif\";","module.exports = __webpack_public_path__ + \"static/media/weiner-dog.6f162a93.gif\";","import React from 'react';\r\nimport './App.css';\r\n\r\nclass Stress extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"detail-container-small\">\r\n                <div class=\"detail-title-container\">\r\n                    <h3 class=\"detail-title\">Stress Level</h3>\r\n                    <div class=\"detail-content-container-small\">\r\n                        <h1 class=\"stress-level\"> {this.props.stress} </h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Stress;","import React from 'react';\r\nimport './App.css';\r\nimport Bamboozled from './vibe-gifs/bamboozled.gif';                   // 7-10\r\nimport BeanField from './vibe-gifs/bean-field.gif';                    // 0-2\r\nimport BulldogMotorcycle from './vibe-gifs/bulldog-motorcycle.gif';    // 3-4\r\nimport BulldogSleepy from './vibe-gifs/bulldog-sleepy.gif';            // 0-2\r\nimport BulldogSnacking from './vibe-gifs/bulldog-snacking.gif';        // 0-2\r\nimport BulldogStretch from './vibe-gifs/bulldog-stretch.gif';          // 0-2\r\nimport BulldogSwing from './vibe-gifs/bulldog-swing.gif';              // 0-2\r\nimport BulldogTrampoline from './vibe-gifs/bulldog-trampoline.gif';    // 0-2\r\nimport BulldogTreadmill from './vibe-gifs/bulldog-treadmill.gif';      // 5-6\r\nimport BunnySleep from './vibe-gifs/bunny-sleep.gif';                  // 0-2\r\nimport CookieMonsterWait from './vibe-gifs/cookie-monster-wait.gif';   // 0-2\r\nimport CostanzaSerenity from './vibe-gifs/costanza-serenity.gif';      // 5-6\r\nimport DaffyNervous from './vibe-gifs/daffy-nervous.gif';              // 3-4\r\nimport DogHammock from './vibe-gifs/dog-hammock.gif';                  // 0-2\r\nimport DogHomework from './vibe-gifs/dog-homework.gif';                // 3-4\r\nimport DogOutOfBed from './vibe-gifs/dog-out-of-bed.gif';              // 0-2\r\nimport DogPjs from './vibe-gifs/dog-pjs.gif';                          // 0-2\r\nimport DogReading from './vibe-gifs/dog-reading.gif';                  // 3-4\r\nimport DogShockGround from './vibe-gifs/dog-shock-ground.gif';         // 5-6\r\nimport DogTreadmill from './vibe-gifs/dog-treadmill.gif';              // 3-4\r\nimport DogTyping from './vibe-gifs/dog-typing.gif';                    // 3-4\r\nimport DrinkScience from './vibe-gifs/drink-science.gif';              // 3-4\r\nimport EeyoreBored from './vibe-gifs/eeyore-bored.gif';                // 3-4\r\nimport EeyoreThankful from './vibe-gifs/eeyore-thankful.gif';          // 3-4\r\nimport FireTyping from './vibe-gifs/fire-typing.gif';                  // 7-10\r\nimport GumpDumb from './vibe-gifs/gump-dumb.gif';                      // undef\r\nimport HomerElectricution from './vibe-gifs/homer-electricution.gif';  // 3-4\r\nimport HomerMonkey from './vibe-gifs/homer-monkey.gif';                // 3-4\r\nimport HomerScream from './vibe-gifs/homer-scream.gif';                // 7-10\r\nimport HomerWorkMoney from './vibe-gifs/homer-work-money.gif';         // 5-6\r\nimport HomerWork from './vibe-gifs/homer-work.gif';                    // 3-4\r\nimport HuskyEatFloor from './vibe-gifs/husky-eat-floor.gif';           // 0-2\r\nimport KermitFrantic from './vibe-gifs/kermit-frantic.gif';            // 7-10\r\nimport KermitNervous from './vibe-gifs/kermit-nervous.gif';            // 5-6\r\nimport KermitType from './vibe-gifs/kermit-type.gif';                  // 5-6\r\nimport KorgiTv from './vibe-gifs/korgi-tv.gif';                        // 0-2\r\nimport KorgiTyping from './vibe-gifs/korgi-typing.gif';                // 5-6\r\nimport KramerChicken from './vibe-gifs/kramer-chicken.gif';            // 0-2\r\nimport KramerShock from './vibe-gifs/kramer-shock.gif';                // 7-10\r\nimport KramerTooMuch from './vibe-gifs/kramer-too-much.gif';           // 7-10\r\nimport LazyDogPool from './vibe-gifs/lazy-dog-pool.gif';               // 0-2\r\nimport LazyRaccoon from './vibe-gifs/lazy-raccoon.gif';                // 0-2 \r\nimport MichaelScottCringe from './vibe-gifs/michael-scott-cringe.gif'; // 5-6\r\nimport OfficeSpaceApathy from './vibe-gifs/office-space-apathy.gif';   // 3-4\r\nimport OfficeSpaceBobs from './vibe-gifs/office-space-bobs.gif';       // 0-2\r\nimport PatrickNothing from './vibe-gifs/patrick-nothing.gif';          // 0-2\r\nimport PenguinWork from './vibe-gifs/penguin-work.gif';                // 3-4\r\nimport PoohSleep from './vibe-gifs/pooh-sleep.gif';                    // 0-2\r\nimport PoohThinking from './vibe-gifs/pooh-thinking.gif';              // 3-4\r\nimport PugShock from './vibe-gifs/pug-shock.gif';                      // 5-6\r\nimport PushFetch from './vibe-gifs/push-fetch.gif';                    // 0-2\r\nimport ShibaInuWorking from './vibe-gifs/shiba-inu-working.gif';       // 3-4\r\nimport ShockedDog from './vibe-gifs/shocked-dog.gif';                  // 5-6\r\nimport SlothCarrots from './vibe-gifs/sloth-carrots.gif';              // 0-2\r\nimport SpongebobCleaning from './vibe-gifs/spongebob-cleaning.gif';    // 7-10\r\nimport SpongebobCoffee from './vibe-gifs/spongebob-coffee.gif';        // 0-2\r\nimport SpongebobReading from './vibe-gifs/spongebob-reading.gif';      // 3-4\r\nimport SylvesterCoffee from './vibe-gifs/sylvester-coffee.gif';        // 7-10\r\nimport ThreeLaptops from './vibe-gifs/three-laptops.gif';              // 7-10\r\nimport UprightDogShock from './vibe-gifs/upright-dog-shock.gif';       // 5-6\r\nimport WeinerDog from './vibe-gifs/weiner-dog.gif';                    // 3-4\r\n\r\nclass Vibe extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    getVibe(stress) {\r\n        if (typeof stress === \"undefined\" || stress == -1) {\r\n            return GumpDumb;\r\n        } else if (stress <= 2) {\r\n            const noStressGifs = [BeanField, BulldogSleepy, BulldogSnacking, BulldogStretch, BulldogSwing, BulldogTrampoline, BunnySleep, CookieMonsterWait, DogHammock, DogOutOfBed, DogPjs, HuskyEatFloor, KorgiTv, KramerChicken, LazyDogPool, LazyRaccoon, OfficeSpaceBobs, PatrickNothing, PoohSleep, PushFetch, SlothCarrots, SpongebobCoffee];\r\n            return noStressGifs[Math.floor(Math.random() * noStressGifs.length)];\r\n        } else if (stress <= 4) {\r\n            const lowStressGifs = [BulldogMotorcycle, DaffyNervous, DogHomework, DogReading, DogTreadmill, DogTyping, DrinkScience, EeyoreBored, EeyoreThankful, HomerElectricution, HomerMonkey, HomerWork, OfficeSpaceApathy, PenguinWork, PoohThinking, ShibaInuWorking, SpongebobReading, WeinerDog];\r\n            return lowStressGifs[Math.floor(Math.random() * lowStressGifs.length)];\r\n        } else if (stress <= 6) {\r\n            const midStressGifs = [BulldogTreadmill, CostanzaSerenity, DogShockGround, HomerWorkMoney, KermitNervous, KermitType, KorgiTyping, MichaelScottCringe, PugShock, ShockedDog, UprightDogShock];\r\n            return midStressGifs[Math.floor(Math.random() * midStressGifs.length)];\r\n        } else {\r\n            const highStressGifs = [Bamboozled, FireTyping, HomerScream, KermitFrantic, KramerShock, KramerTooMuch, SpongebobCleaning, SylvesterCoffee, ThreeLaptops];\r\n            return highStressGifs[Math.floor(Math.random() * highStressGifs.length)];\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"detail-container-large\">\r\n                <div class=\"detail-title-container\">\r\n                    <h3 class=\"detail-title\">Vibe</h3>\r\n                    <div class=\"detail-content-container-large\">\r\n                        <img src={this.getVibe(this.props.stress)} alt=\"vibe\"></img>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Vibe;","import React from 'react';\r\nimport './App.css';\r\n\r\nclass Countdown extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    getUntil(date, displayTime) {\r\n        if (date === (new Date()).toLocaleDateString()) {\r\n            return (\r\n                <div class=\"detail-content-container-small\">\r\n                    <h1 class=\"display-time\">{displayTime}</h1>\r\n                    <p class=\"elaboration\">({date})</p>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div class=\"detail-content-container-small\">\r\n                <h1 class=\"display-time\">Tomorrow</h1>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const title = (this.props.available) ? \"A\" : \"Una\";\r\n        const shift = new Date(this.props.shift);\r\n        const time = shift.toLocaleTimeString();\r\n        const displayTime = time.substring(0, time.length - 6) + time.substring(time.length - 3);\r\n        const date = shift.toLocaleDateString();\r\n        return (\r\n            <div class=\"detail-container-small\">\r\n                <div class=\"detail-title-container\">\r\n                    <h3 class=\"detail-title\">{title}vailable until</h3>\r\n                    {this.getUntil(date, displayTime)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Countdown;","import React from 'react';\r\nimport './App.css';\r\nimport Stress from './Stress';\r\nimport Vibe from './Vibe';\r\nimport Countdown from './Countdown';\r\n\r\n\r\nrequire('dotenv').config();\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stress: -1, // 0-10 stress level provided by To Do google sheet\r\n      color: \"#AFAFAF\", // background color, determined by stress/availability\r\n      available: true, // currently available? provided by google calendar\r\n      shift: -1, // Time of next availability shift\r\n    };\r\n    this.updateState = this.updateState.bind(this);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.updateState();\r\n    setInterval(this.updateState, 4 * 60 * 1000);\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    clearInterval(this.updateState);\r\n  }\r\n\r\n  updateState() {\r\n    this.fetchStress().then(stress => {\r\n      this.fetchAvailability().then(availability => {\r\n        this.setState({\r\n          stress: stress,\r\n          color: this.getColor(stress, availability.available),\r\n          available: availability.available,\r\n          shift: availability.shift\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  async fetchStress(cell) {\r\n    cell = (typeof cell === \"undefined\") ? \"E17\" : cell; //E17 is where Stress Level is stored\r\n    let call = \"https://sheets.googleapis.com/v4/spreadsheets/\" + process.env.REACT_APP_TODO_ID;\r\n    call += \"/values/Aggregate!\" + cell + \"?key=\" + process.env.REACT_APP_GOOGLE_API_KEY;\r\n    return fetch(call).then(res => res.json()).then(json => json.values[0][0]);\r\n  }\r\n\r\n  async fetchAvailability() {\r\n    const timeMax = (new Date(Date.now() + 72 * 60 * 60 * 1000)).toISOString();\r\n    const timeMin = (new Date()).toISOString();\r\n    const calID = process.env.REACT_APP_CALENDAR_ID;\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ \r\n        timeMin: timeMin,\r\n        timeMax: timeMax,\r\n        items: [\r\n          {\r\n            id: calID\r\n          }\r\n        ]\r\n      })\r\n    };\r\n    const call = \"https://www.googleapis.com/calendar/v3/freeBusy?key=\" + process.env.REACT_APP_GOOGLE_API_KEY;\r\n    return fetch(call, requestOptions).then(res => res.json()).then(json => {\r\n      let available = true;\r\n      let shift;\r\n      const nextEvent = json.calendars[calID].busy[0];\r\n      if (typeof nextEvent === \"undefined\") {\r\n        shift = null;\r\n      } else if ((new Date(nextEvent.start)) <= (Date.now() + 5 * 60 * 1000)) {\r\n        available = false;\r\n        shift = nextEvent.end;\r\n      } else {\r\n        shift = nextEvent.start;\r\n      }\r\n      return ({\r\n        available: available,\r\n        shift: shift\r\n      });\r\n    });\r\n  }\r\n\r\n  getColor(stress, available) {\r\n    if (typeof available === \"undefined\" || !available) {\r\n      return \"#FFBFBF\";\r\n    } else {\r\n      switch (stress) {\r\n        case \"0\": return \"#BFFFBF\";\r\n        case \"1\": return \"#CAFFBF\";\r\n        case \"2\": return \"#D4FFBF\";\r\n        case \"3\": return \"#DFFFBF\";\r\n        case \"4\": return \"#EAFFBF\";\r\n        case \"5\": return \"#F4FFBF\";\r\n        case \"6\": return \"#FFFFBF\";\r\n        case \"7\": return \"#FFF4BF\";\r\n        case \"8\": return \"#FFEABF\";\r\n        case \"9\": return \"#FFDFBF\";\r\n        case \"10\": return \"#FFD4BF\";\r\n        default: return \"#AFAFAF\";\r\n      };\r\n    }\r\n  }\r\n\r\n  render() {\r\n    document.body.style = \"background: \" + this.state.color;\r\n    let message;\r\n    let elaboration;\r\n    if (this.state.available) {\r\n      if (this.state.stress == -1) {\r\n        message = \"404: Availability unavailable :(\"\r\n        elaboration = \"(Something went wrong retrieving availability)\"\r\n      } else if (this.state.stress <= 2) {\r\n        message = \"Currently available!\";\r\n        elaboration = \"(Come say hi!)\";\r\n      } else if (this.state.stress <= 4) {\r\n        message = \"Mostly available\";\r\n        elaboration = \"(We can probably talk)\";\r\n      } else if (this.state.stress <= 6) {\r\n        message = \"Kinda available\";\r\n        elaboration = \"(I might be able to talk)\";\r\n      } else {\r\n        message = \"Currently swamped\";\r\n        elaboration = \"(But available if we really need to talk)\";\r\n      }\r\n    } else {\r\n      message = \"Currently unavailable\"\r\n      elaboration = \"(Please do not disturb until next availability)\"\r\n    }\r\n    return (\r\n      <span>\r\n        <h1 class=\"title\">Jake Status</h1>\r\n        <div class=\"availability\">\r\n          <h2 class=\"message\">{message}</h2>\r\n          <p class=\"elaboration\">{elaboration}</p>\r\n        </div>\r\n        <div class=\"detail-section\">\r\n          <Stress stress={this.state.stress}/>\r\n          <Vibe stress={this.state.stress}/>\r\n          <Countdown available={this.state.available} shift={this.state.shift}/>\r\n        </div>\r\n      </span>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}